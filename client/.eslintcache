[{"D:\\pecquora\\pecquora\\client\\src\\App.js":"1","D:\\pecquora\\pecquora\\client\\src\\index.js":"2","D:\\pecquora\\pecquora\\client\\src\\components\\header.jsx":"3","D:\\pecquora\\pecquora\\client\\src\\components\\Header.jsx":"4","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx":"5","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx":"6","D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx":"7","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx":"8","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx":"9"},{"size":1743,"mtime":1614700060534,"results":"10","hashOfConfig":"11"},{"size":155,"mtime":1609670767027,"results":"12","hashOfConfig":"11"},{"size":485,"mtime":1609674323807,"results":"13","hashOfConfig":"11"},{"size":2040,"mtime":1614247556473,"results":"14","hashOfConfig":"11"},{"size":1720,"mtime":1614629445893,"results":"15","hashOfConfig":"11"},{"size":5103,"mtime":1614235061490,"results":"16","hashOfConfig":"11"},{"size":3973,"mtime":1614190912454,"results":"17","hashOfConfig":"11"},{"size":3004,"mtime":1614716040653,"results":"18","hashOfConfig":"11"},{"size":1219,"mtime":1614697956126,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fbxqte",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"D:\\pecquora\\pecquora\\client\\src\\App.js",[],"D:\\pecquora\\pecquora\\client\\src\\index.js",[],["43","44"],"D:\\pecquora\\pecquora\\client\\src\\components\\header.jsx",["45","46","47","48","49","50"],"D:\\pecquora\\pecquora\\client\\src\\components\\Header.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx",["51","52"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PECQuora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory();\r\n    const SignUpUser = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n  \r\n      const url = \"http://localhost:5000/signin\";\r\n  \r\n      try {\r\n        const response = await axios.post(url, form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n        const { data, status } = response;\r\n  \r\n        if (status === 200) {\r\n          history.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Dont have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx",["53"],"import React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport axios from \"axios\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\nimport Pusher from \"pusher-js\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst QuestionList = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const pusher = new Pusher('5bb1120da3668b56421f', {\r\n          cluster: 'mt1'\r\n      });\r\n  \r\n      const channel = pusher.subscribe('questions');\r\n      channel.bind('insertion', (data)=> {\r\n        alert(JSON.stringify(data));\r\n      });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [questions]);\r\n\r\n  useEffect(() => {\r\n    const url = \"http://localhost:5000/all-questions\";\r\n    \r\n    /*const init = async () => {\r\n\r\n        // get http request using axios\r\n  \r\n        let res = await axios.get(url);\r\n        res = await res.data;\r\n        setQuestions(res);\r\n      };\r\n      init();\r\n     */\r\n    \r\n    axios\r\n      .get(url, { withCredentials:true })\r\n      .then((response) => {\r\n        setQuestions(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      }); \r\n    \r\n  });\r\n  \r\n  const Like = (ID) => {\r\n    const url = \"http://localhost:5000/likes\";\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(url, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"QuestionList\">\r\n      {questions && (\r\n        <div className=\"Questions\">\r\n          <Link to=\"/answer\"> {/* to redirect user to /answer page */}\r\n          {questions.map((question) => {\r\n            return (\r\n              <div className=\"question\" key={question._id}>\r\n                <div className=\"question__profile\">\r\n                  <Avatar src={question.owner_image} alt=\"User Profile\" />\r\n                  <h4>{question.owner}</h4>\r\n                </div>\r\n                <div className=\"question__info\">\r\n                  <div className=\"question__question\">\r\n                    <h4>{question.question}</h4>\r\n                  </div>\r\n                  <div className=\"question__stats\">\r\n                    <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                      <ThumbUpIcon onClick={() => Like(question._id)} />\r\n                      <h4>{question.upvotes}</h4>\r\n                    </div>\r\n                    <div className=\"comments\" style={{ cursor: \"pointer\" }}>\r\n                      <ChatIcon />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx",["54"],"import React,{useState} from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport \"../StyleSheet/QuestionBox.css\";\r\n\r\nconst AnswerBox = ({profileimage, authStatus}) => {\r\n    \r\n    const [question, setQuestion] = useState(\"\");\r\n    \r\n    \r\n    return (\r\n        <div className=\"QuestionBox\">\r\n            <div className=\"questionBox_user\">\r\n                <Avatar src={profileimage} \r\n                alt=\"user profile\" />\r\n                <h4 className=\"user_username\">Akshay</h4>\r\n            </div>\r\n            \r\n            <div className=\"QuestionBox_inputField\">\r\n                <input type=\"text\" \r\n                placeholder=\"What is your answer ?\" \r\n                className=\"QuestionBox_inputfield\"\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                value={question}\r\n                />\r\n                <button\r\n                disabled={authStatus === true ? false : true} //allow to ask question only if user is logged in!\r\n                className=\"QuestionBox__btn\"\r\n               \r\n                >\r\n                Answer\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswerBox;\r\n",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":25},{"ruleId":"61","severity":1,"message":"66","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":21},{"ruleId":"61","severity":1,"message":"67","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":20},{"ruleId":"61","severity":1,"message":"68","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":26},{"ruleId":"61","severity":1,"message":"69","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":20},{"ruleId":"61","severity":1,"message":"70","line":53,"column":19,"nodeType":"63","messageId":"64","endLine":53,"endColumn":27},{"ruleId":"61","severity":1,"message":"71","line":70,"column":17,"nodeType":"63","messageId":"64","endLine":70,"endColumn":21},{"ruleId":"61","severity":1,"message":"72","line":8,"column":16,"nodeType":"63","messageId":"64","endLine":8,"endColumn":26},{"ruleId":"61","severity":1,"message":"73","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"57","replacedBy":"74"},{"ruleId":"59","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'HomeIcon' is defined but never used.","Identifier","unusedVar","'NotificationsIcon' is defined but never used.","'PeopleAltIcon' is defined but never used.","'GroupAddIcon' is defined but never used.","'QuestionAnswerIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'setImage' is assigned a value but never used.","'data' is assigned a value but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.",["76"],["77"],"no-global-assign","no-unsafe-negation"]