[{"D:\\pecquora\\pecquora\\client\\src\\App.js":"1","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx":"2","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx":"3","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx":"4","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx":"5","D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx":"6","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx":"7","D:\\pecquora\\pecquora\\client\\src\\index.js":"8","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionScreen.jsx":"9","D:\\pecquora\\pecquora\\client\\src\\components\\Background.jsx":"10","D:\\pecquora\\pecquora\\client\\src\\components\\Navbar.jsx":"11","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerLIst.jsx":"12"},{"size":2257,"mtime":1619021631008,"results":"13","hashOfConfig":"14"},{"size":2082,"mtime":1619931353189,"results":"15","hashOfConfig":"14"},{"size":1982,"mtime":1619018412416,"results":"16","hashOfConfig":"14"},{"size":4151,"mtime":1619018349257,"results":"17","hashOfConfig":"14"},{"size":3408,"mtime":1619017890988,"results":"18","hashOfConfig":"14"},{"size":4129,"mtime":1619018167787,"results":"19","hashOfConfig":"14"},{"size":5255,"mtime":1619018250677,"results":"20","hashOfConfig":"14"},{"size":155,"mtime":1609670767027,"results":"21","hashOfConfig":"14"},{"size":857,"mtime":1619928505210,"results":"22","hashOfConfig":"14"},{"size":261,"mtime":1618105196606,"results":"23","hashOfConfig":"14"},{"size":2214,"mtime":1618178015479,"results":"24","hashOfConfig":"14"},{"size":3593,"mtime":1619932901317,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1fbxqte",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\pecquora\\pecquora\\client\\src\\App.js",["61"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport QuestionBox from \"./components/QuestionBox\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport NavBar from \"./components/Navbar\"\nimport QuesstionList from \"./components/QuestionList\";\nimport axios from \"axios\"\nimport QuestionScreen from \"./components/QuestionScreen\";\nimport Background from \"./components/Background\";\n\n// use callbacks instead of \"function App()\"\n\n\nconst App = () =>  {\n  \n  // prop drilling\n\n  const [authStatus, setAuthStatus] = useState(false);\n  const [profileImage, setProfileImage] = useState(null);\n\n  // whenever anything happens in the \"App\", useEffect is triggered.\n\n  useEffect(()=>{\n    const server1 = process.env.NODE_ENV === \"production\"\n        ? \"https://pecquora-backend.herokuapp.com/isLoggedIn\" : \"http://localhost:5000/isLoggedIn\";\n\n    const url= server1;\n\n    axios\n        .get(\"/isLoggedIn\", {withCredentials: true})\n        .then((response)=>{\n            setAuthStatus(response.data.authStatus);\n            setProfileImage(response.data.profileImage);\n        })\n        .catch((error)=>{\n            console.log(error);\n        });\n  }, []);\n\n  return (\n    <Router className=\"App\">\n      <NavBar profileImage={profileImage}/> {/* header will be present in all pages */}\n         <Switch>\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n\n          <Route path=\"/questions/:id\" render={(props) => (  \n            <QuestionScreen authStatus={authStatus} profileImage={profileImage}\n                {...props} />\n            )} exact />\n        \n          {/*<Route path=\"/questions/:id\">\n            <QuestionScreen authStatus={authStatus} profileImage={profileImage}/>\n            /Route> */}\n          <Route path=\"/\">\n            <div style={{background:\"rgba(25, 28, 31)\"}}>\n            <Background />\n            <QuestionBox authStatus={authStatus} profileImage={profileImage}/>\n            <QuesstionList />\n            </div>\n          </Route>\n\n          </Switch>\n    </Router>\n  );\n} \n\nexport default App;\n\n",["62","63"],"D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx",["64","65"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx",["66"],"import React,{useState} from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport \"../StyleSheet/QuestionBox.css\";\r\n\r\nconst QuestionBox = ({profileImage, authStatus}) => {\r\n    \r\n    const [question, setQuestion] = useState(\"\");\r\n    \r\n    const AskQuestion = async () => {\r\n        const form_data = new FormData();\r\n        form_data.append(\"question\", question);\r\n\r\n        const server1 = process.env.NODE_ENV === \"production\"\r\n         ? \"https://pecquora-backend.herokuapp.com/api/ask-question/\" : \"http://localhost:5000/api/ask-question/\";\r\n    \r\n         const url = server1;\r\n        \r\n       \r\n        \r\n        try {\r\n        const response = await axios.post(\"/api/ask-question\", form_data, {\r\n            withCredentials: true,\r\n        });\r\n        \r\n        alert(response.data.msg);\r\n        } catch (error) {\r\n        alert(error.response.data.msg);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"questionBackground\">\r\n        <div className=\"QuestionBox\">\r\n            <div className=\"questionBox_user\">\r\n                <Avatar src={profileImage} \r\n                alt=\"user profile\" />\r\n                <h4 className=\"user_username\">Akshay</h4>\r\n            </div>\r\n            \r\n            <div className=\"QuestionBox_inputField\">\r\n                <input type=\"text\" \r\n                placeholder=\"What is your question ?\" \r\n                className=\"QuestionBox_inputfield\"\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                value={question}\r\n                />\r\n                <button\r\n                disabled={authStatus === true ? false : true} //allow to ask question only if user is logged in!\r\n                className=\"QuestionBox__btn\"\r\n                onClick={AskQuestion}\r\n                >\r\n                Ask Question\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionBox;\r\n",["67","68"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx",["69","70","71"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx",["72"],"import React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QuestionList = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n\r\n  /*\r\n    useEffect(() => {\r\n      const pusher = new Pusher('5bb1120da3668b56421f', {\r\n          cluster: 'mt1'\r\n      });\r\n  \r\n      const channel = pusher.subscribe('questions');\r\n      channel.bind('insertion', (data)=> {\r\n        alert(JSON.stringify(data));\r\n      });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [questions]);\r\n  */\r\n\r\n  useEffect(() => {\r\n    const server1 = process.env.NODE_ENV === \"production\"\r\n    ? \"https://pecquora-backend.herokuapp.com/api/all-questions\" : \"http://localhost:5000/api/all-questions\";\r\n\r\n    const url = server1;\r\n\r\n    \r\n    /*const init = async () => {\r\n\r\n        // get http request using axios\r\n  \r\n        let res = await axios.get(url);\r\n        res = await res.data;\r\n        setQuestions(res);\r\n      };\r\n      init();\r\n     */\r\n    \r\n    axios\r\n      .get(\"/api/all-questions\", { withCredentials:true })\r\n      .then((response) => {\r\n        setQuestions(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      }); \r\n    \r\n  });\r\n  \r\n  const Like = (ID) => {\r\n    const url = \"/api/likes\";\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(url, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  \r\n  //const QuestionID = (ID) => {\r\n    //\r\n   \r\n  //}\r\n\r\n  return (\r\n    <div className=\"QuestionList\">\r\n      {questions && (\r\n        <div className=\"Questions\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <div className=\"question\" key={question._id}>\r\n                <div className=\"question__profile\">\r\n                  <Avatar src={question.owner_image} alt=\"User Profile\" />\r\n                  <h4>{question.owner}</h4>\r\n                </div>\r\n                <div className=\"question__info\">\r\n                  <div className=\"question__question\">\r\n                    <h4>{question.question}</h4>\r\n                  </div>\r\n                  <div className=\"question__stats\">\r\n                    <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                      <ThumbUpIcon onClick={() => Like(question._id)} />\r\n                      <h4>{question.upvotes}</h4>\r\n                    </div>\r\n                    <Link className=\"comments\" style ={{textDecoration: \"none\", color: \"white\"}}to= {`/questions/${question._id}`} /*onClick={()=> QuestionID(question._id)}*/ \r\n                    > {/* to redirect user to /answer page */}\r\n                    <div className=\"comments\" style={{ cursor: \"pointer\", textDecoration: \"none\" }}>\r\n                      <ChatIcon />\r\n                    </div>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }).reverse()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;",["73","74"],"D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx",["75","76","77"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"../helper/axioshelper\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PECQuora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory();\r\n    const SignUpUser = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n\r\n      const server1 = process.env.NODE_ENV === \"production\"\r\n      ? \"https://pecquora-backend.herokuapp.com/signin\" : \"http://localhost:5000/signin\";\r\n \r\n      const url = server1;\r\n  \r\n  \r\n      try {\r\n        const response = await axios.post(\"/signin\", form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n        const { data, status } = response;\r\n  \r\n        if (status === 200) {\r\n          history.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Dont have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx",["78"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"../helper/axioshelper\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PEC Quora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    \r\n    // state management\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory(); // Hook to re-direct user\r\n    const SignUpUser = async (e) => {\r\n\r\n      // to avoid refresh.\r\n\r\n      e.preventDefault();\r\n      \r\n      //FormData Provides a way to easily construct a set of key/value pairs representing form fields and their values,\r\n      //which can then be easily sent using the XMLHttpRequest.send()/axios.send() method.\r\n\r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n      \r\n      // saving url in a variable to use it later whenever needed. Best Practises.\r\n      const server1 = process.env.NODE_ENV === \"production\"\r\n      ? \"https://pecquora-backend.herokuapp.com/signup\" : \"http://localhost:5000/signup\";\r\n \r\n      const url = server1;\r\n  \r\n      try {\r\n\r\n        // Making http post request to backend using axios.\r\n\r\n        const response = await axios.post(\"/signup\", form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n\r\n        // Destructure data and status\r\n\r\n        const { data, status } = response;\r\n  \r\n        if (status === 201) {\r\n          \r\n          //if status is created(201 status code), \r\n          //re-direct user back to sign in page \r\n\r\n          alert(data.msg);\r\n          history.push(\"/signin\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n    //jsx\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            //state management. By setting \"setUsername\" as entered value, we can send it through props and use \"username\" in other files.\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            //state management. By setting \"setPassword\" as entered value, we can send it through props and use \"password\" in other files.\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <label style={{marginRight:\"5px\", fontWeight:\"700\"}}>Select Profile Image:</label>\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signin\" variant=\"body2\">\r\n                {\"Already have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\index.js",[],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionScreen.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\Background.jsx",["79"],"import React from \"react\";\r\n\r\n  const Header = () => {\r\n    \r\n    // to get window location!\r\n    const location = window.location.href;\r\n\r\n    return(\r\n        <div style={{padding:\"4rem\"}}>\r\n\r\n        </div>\r\n            \r\n    )\r\n}; \r\n\r\nexport default Header;",["80","81"],"D:\\pecquora\\pecquora\\client\\src\\components\\Navbar.jsx",["82"],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport \"../StyleSheet/NavBar.css\";\r\nimport \"../StyleSheet/Header.css\";\r\n\r\nfunction NavBar() {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"nav-container\">\r\n          <NavLink exact to=\"/\" className=\"nav-logo\">\r\n            Pec Quora\r\n          </NavLink>\r\n\r\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/about\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                About Us\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/signin\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                Sign In\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/signup\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n              Sign Up\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <div className=\"nav-icon\" onClick={handleClick}>\r\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}><MenuIcon style={{fontSize: \"30px\", marginTop:\"3px\"}}/></i>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerLIst.jsx",["83","84","85","86","87"],{"ruleId":"88","severity":1,"message":"89","line":29,"column":11,"nodeType":"90","messageId":"91","endLine":29,"endColumn":14},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":11,"nodeType":"98","messageId":"99","endLine":18,"endColumn":82},{"ruleId":"88","severity":1,"message":"89","line":20,"column":15,"nodeType":"90","messageId":"91","endLine":20,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":17,"column":16,"nodeType":"90","messageId":"91","endLine":17,"endColumn":19},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"88","severity":1,"message":"89","line":37,"column":11,"nodeType":"90","messageId":"91","endLine":37,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":47,"column":5,"nodeType":"104","endLine":47,"endColumn":15,"suggestions":"105"},{"ruleId":"88","severity":1,"message":"89","line":54,"column":11,"nodeType":"90","messageId":"91","endLine":54,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":36,"column":11,"nodeType":"90","messageId":"91","endLine":36,"endColumn":14},{"ruleId":"92","replacedBy":"106"},{"ruleId":"94","replacedBy":"107"},{"ruleId":"88","severity":1,"message":"108","line":53,"column":19,"nodeType":"90","messageId":"91","endLine":53,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":66,"column":13,"nodeType":"90","messageId":"91","endLine":66,"endColumn":16},{"ruleId":"88","severity":1,"message":"109","line":74,"column":17,"nodeType":"90","messageId":"91","endLine":74,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":75,"column":13,"nodeType":"90","messageId":"91","endLine":75,"endColumn":16},{"ruleId":"88","severity":1,"message":"110","line":6,"column":11,"nodeType":"90","messageId":"91","endLine":6,"endColumn":19},{"ruleId":"92","replacedBy":"111"},{"ruleId":"94","replacedBy":"112"},{"ruleId":"88","severity":1,"message":"113","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"114","line":17,"column":9,"nodeType":"90","messageId":"91","endLine":17,"endColumn":21},{"ruleId":"88","severity":1,"message":"115","line":18,"column":9,"nodeType":"90","messageId":"91","endLine":18,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":42,"column":11,"nodeType":"90","messageId":"91","endLine":42,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":52,"column":5,"nodeType":"104","endLine":52,"endColumn":7,"suggestions":"116"},{"ruleId":"88","severity":1,"message":"89","line":59,"column":11,"nodeType":"90","messageId":"91","endLine":59,"endColumn":14},"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["117"],["118"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questionID'. Either include it or remove the dependency array.","ArrayExpression",["119"],["117"],["118"],"'setImage' is assigned a value but never used.","'data' is assigned a value but never used.","'location' is assigned a value but never used.",["117"],["118"],"'CloseIcon' is defined but never used.","'profileImage' is assigned a value but never used.","'authStatus' is assigned a value but never used.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [question, questionID]",{"range":"125","text":"126"},"Update the dependencies array to be: [questionID]",{"range":"127","text":"128"},[1382,1392],"[question, questionID]",[1502,1504],"[questionID]"]