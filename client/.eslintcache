[{"D:\\pecquora\\pecquora\\client\\src\\App.js":"1","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx":"2","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx":"3","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx":"4","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx":"5","D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx":"6","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx":"7","D:\\pecquora\\pecquora\\client\\src\\index.js":"8","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionScreen.jsx":"9","D:\\pecquora\\pecquora\\client\\src\\components\\Background.jsx":"10","D:\\pecquora\\pecquora\\client\\src\\components\\Navbar.jsx":"11","D:\\pecquora-master\\client\\src\\index.js":"12","D:\\pecquora-master\\client\\src\\App.js":"13","D:\\pecquora-master\\client\\src\\components\\SignUp.jsx":"14","D:\\pecquora-master\\client\\src\\components\\Navbar.jsx":"15","D:\\pecquora-master\\client\\src\\components\\Background.jsx":"16","D:\\pecquora-master\\client\\src\\components\\QuestionList.jsx":"17","D:\\pecquora-master\\client\\src\\components\\SignIn.jsx":"18","D:\\pecquora-master\\client\\src\\components\\QuestionBox.jsx":"19","D:\\pecquora-master\\client\\src\\components\\QuestionScreen.jsx":"20","D:\\pecquora-master\\client\\src\\helper\\axioshelper.js":"21","D:\\pecquora-master\\client\\src\\components\\AnswerBox.jsx":"22","D:\\pecquora-master\\client\\src\\components\\QuestionById.jsx":"23","D:\\pecquora-master\\client\\src\\components\\AnswerLIst.jsx":"24","D:\\pecquora-master\\client\\src\\components\\about.jsx":"25"},{"size":2257,"mtime":1619021631008,"results":"26","hashOfConfig":"27"},{"size":2036,"mtime":1618972945489,"results":"28","hashOfConfig":"27"},{"size":1982,"mtime":1619018412416,"results":"29","hashOfConfig":"27"},{"size":4151,"mtime":1619018349257,"results":"30","hashOfConfig":"27"},{"size":3408,"mtime":1619017890988,"results":"31","hashOfConfig":"27"},{"size":4129,"mtime":1619018167787,"results":"32","hashOfConfig":"27"},{"size":5255,"mtime":1619018250677,"results":"33","hashOfConfig":"27"},{"size":155,"mtime":1609670767027,"results":"34","hashOfConfig":"27"},{"size":696,"mtime":1618183538699,"results":"35","hashOfConfig":"27"},{"size":261,"mtime":1618105196606,"results":"36","hashOfConfig":"27"},{"size":2214,"mtime":1618178015479,"results":"37","hashOfConfig":"27"},{"size":155,"mtime":1620134417991,"results":"38","hashOfConfig":"39"},{"size":2169,"mtime":1620655406743,"results":"40","hashOfConfig":"39"},{"size":7134,"mtime":1620555404900,"results":"41","hashOfConfig":"39"},{"size":2124,"mtime":1620655448477,"results":"42","hashOfConfig":"39"},{"size":261,"mtime":1620257340942,"results":"43","hashOfConfig":"39"},{"size":3288,"mtime":1620521257109,"results":"44","hashOfConfig":"39"},{"size":3934,"mtime":1620451943471,"results":"45","hashOfConfig":"39"},{"size":1914,"mtime":1620359491253,"results":"46","hashOfConfig":"39"},{"size":941,"mtime":1620258802567,"results":"47","hashOfConfig":"39"},{"size":102,"mtime":1620134418596,"results":"48","hashOfConfig":"39"},{"size":2014,"mtime":1620349236849,"results":"49","hashOfConfig":"39"},{"size":2221,"mtime":1620265992043,"results":"50","hashOfConfig":"39"},{"size":4116,"mtime":1620556038347,"results":"51","hashOfConfig":"39"},{"size":7120,"mtime":1620655560732,"results":"52","hashOfConfig":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fbxqte",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"ypqaub",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"D:\\pecquora\\pecquora\\client\\src\\App.js",["117"],"D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx",["118"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx",["119"],"import React,{useState} from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport \"../StyleSheet/QuestionBox.css\";\r\n\r\nconst QuestionBox = ({profileImage, authStatus}) => {\r\n    \r\n    const [question, setQuestion] = useState(\"\");\r\n    \r\n    const AskQuestion = async () => {\r\n        const form_data = new FormData();\r\n        form_data.append(\"question\", question);\r\n\r\n        const server1 = process.env.NODE_ENV === \"production\"\r\n         ? \"https://pecquora-backend.herokuapp.com/api/ask-question/\" : \"http://localhost:5000/api/ask-question/\";\r\n    \r\n         const url = server1;\r\n        \r\n       \r\n        \r\n        try {\r\n        const response = await axios.post(\"/api/ask-question\", form_data, {\r\n            withCredentials: true,\r\n        });\r\n        \r\n        alert(response.data.msg);\r\n        } catch (error) {\r\n        alert(error.response.data.msg);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"questionBackground\">\r\n        <div className=\"QuestionBox\">\r\n            <div className=\"questionBox_user\">\r\n                <Avatar src={profileImage} \r\n                alt=\"user profile\" />\r\n                <h4 className=\"user_username\">Akshay</h4>\r\n            </div>\r\n            \r\n            <div className=\"QuestionBox_inputField\">\r\n                <input type=\"text\" \r\n                placeholder=\"What is your question ?\" \r\n                className=\"QuestionBox_inputfield\"\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                value={question}\r\n                />\r\n                <button\r\n                disabled={authStatus === true ? false : true} //allow to ask question only if user is logged in!\r\n                className=\"QuestionBox__btn\"\r\n                onClick={AskQuestion}\r\n                >\r\n                Ask Question\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionBox;\r\n","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx",["120","121","122"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx",["123"],"import React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QuestionList = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n\r\n  /*\r\n    useEffect(() => {\r\n      const pusher = new Pusher('5bb1120da3668b56421f', {\r\n          cluster: 'mt1'\r\n      });\r\n  \r\n      const channel = pusher.subscribe('questions');\r\n      channel.bind('insertion', (data)=> {\r\n        alert(JSON.stringify(data));\r\n      });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [questions]);\r\n  */\r\n\r\n  useEffect(() => {\r\n    const server1 = process.env.NODE_ENV === \"production\"\r\n    ? \"https://pecquora-backend.herokuapp.com/api/all-questions\" : \"http://localhost:5000/api/all-questions\";\r\n\r\n    const url = server1;\r\n\r\n    \r\n    /*const init = async () => {\r\n\r\n        // get http request using axios\r\n  \r\n        let res = await axios.get(url);\r\n        res = await res.data;\r\n        setQuestions(res);\r\n      };\r\n      init();\r\n     */\r\n    \r\n    axios\r\n      .get(\"/api/all-questions\", { withCredentials:true })\r\n      .then((response) => {\r\n        setQuestions(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      }); \r\n    \r\n  });\r\n  \r\n  const Like = (ID) => {\r\n    const url = \"/api/likes\";\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(url, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  \r\n  //const QuestionID = (ID) => {\r\n    //\r\n   \r\n  //}\r\n\r\n  return (\r\n    <div className=\"QuestionList\">\r\n      {questions && (\r\n        <div className=\"Questions\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <div className=\"question\" key={question._id}>\r\n                <div className=\"question__profile\">\r\n                  <Avatar src={question.owner_image} alt=\"User Profile\" />\r\n                  <h4>{question.owner}</h4>\r\n                </div>\r\n                <div className=\"question__info\">\r\n                  <div className=\"question__question\">\r\n                    <h4>{question.question}</h4>\r\n                  </div>\r\n                  <div className=\"question__stats\">\r\n                    <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                      <ThumbUpIcon onClick={() => Like(question._id)} />\r\n                      <h4>{question.upvotes}</h4>\r\n                    </div>\r\n                    <Link className=\"comments\" style ={{textDecoration: \"none\", color: \"white\"}}to= {`/questions/${question._id}`} /*onClick={()=> QuestionID(question._id)}*/ \r\n                    > {/* to redirect user to /answer page */}\r\n                    <div className=\"comments\" style={{ cursor: \"pointer\", textDecoration: \"none\" }}>\r\n                      <ChatIcon />\r\n                    </div>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }).reverse()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;",["124","125"],"D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx",["126","127","128"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"../helper/axioshelper\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PECQuora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory();\r\n    const SignUpUser = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n\r\n      const server1 = process.env.NODE_ENV === \"production\"\r\n      ? \"https://pecquora-backend.herokuapp.com/signin\" : \"http://localhost:5000/signin\";\r\n \r\n      const url = server1;\r\n  \r\n  \r\n      try {\r\n        const response = await axios.post(\"/signin\", form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n        const { data, status } = response;\r\n  \r\n        if (status === 200) {\r\n          history.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Dont have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx",["129"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"../helper/axioshelper\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PEC Quora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    \r\n    // state management\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory(); // Hook to re-direct user\r\n    const SignUpUser = async (e) => {\r\n\r\n      // to avoid refresh.\r\n\r\n      e.preventDefault();\r\n      \r\n      //FormData Provides a way to easily construct a set of key/value pairs representing form fields and their values,\r\n      //which can then be easily sent using the XMLHttpRequest.send()/axios.send() method.\r\n\r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n      \r\n      // saving url in a variable to use it later whenever needed. Best Practises.\r\n      const server1 = process.env.NODE_ENV === \"production\"\r\n      ? \"https://pecquora-backend.herokuapp.com/signup\" : \"http://localhost:5000/signup\";\r\n \r\n      const url = server1;\r\n  \r\n      try {\r\n\r\n        // Making http post request to backend using axios.\r\n\r\n        const response = await axios.post(\"/signup\", form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n\r\n        // Destructure data and status\r\n\r\n        const { data, status } = response;\r\n  \r\n        if (status === 201) {\r\n          \r\n          //if status is created(201 status code), \r\n          //re-direct user back to sign in page \r\n\r\n          alert(data.msg);\r\n          history.push(\"/signin\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n    //jsx\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            //state management. By setting \"setUsername\" as entered value, we can send it through props and use \"username\" in other files.\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            //state management. By setting \"setPassword\" as entered value, we can send it through props and use \"password\" in other files.\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <label style={{marginRight:\"5px\", fontWeight:\"700\"}}>Select Profile Image:</label>\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signin\" variant=\"body2\">\r\n                {\"Already have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\index.js",[],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionScreen.jsx",[],["130","131"],"D:\\pecquora\\pecquora\\client\\src\\components\\Background.jsx",["132"],"import React from \"react\";\r\n\r\n  const Header = () => {\r\n    \r\n    // to get window location!\r\n    const location = window.location.href;\r\n\r\n    return(\r\n        <div style={{padding:\"4rem\"}}>\r\n\r\n        </div>\r\n            \r\n    )\r\n}; \r\n\r\nexport default Header;","D:\\pecquora\\pecquora\\client\\src\\components\\Navbar.jsx",["133"],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport \"../StyleSheet/NavBar.css\";\r\nimport \"../StyleSheet/Header.css\";\r\n\r\nfunction NavBar() {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"nav-container\">\r\n          <NavLink exact to=\"/\" className=\"nav-logo\">\r\n            Pec Quora\r\n          </NavLink>\r\n\r\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/about\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                About Us\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/signin\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                Sign In\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/signup\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n              Sign Up\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <div className=\"nav-icon\" onClick={handleClick}>\r\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}><MenuIcon style={{fontSize: \"30px\", marginTop:\"3px\"}}/></i>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","D:\\pecquora-master\\client\\src\\index.js",[],["134","135"],"D:\\pecquora-master\\client\\src\\App.js",[],"D:\\pecquora-master\\client\\src\\components\\SignUp.jsx",[],"D:\\pecquora-master\\client\\src\\components\\Navbar.jsx",[],"D:\\pecquora-master\\client\\src\\components\\Background.jsx",["136"],"import React from \"react\";\r\n\r\n  const Header = () => {\r\n    \r\n    // to get window location!\r\n    const location = window.location.href;\r\n\r\n    return(\r\n        <div style={{padding:\"2rem\"}}>\r\n\r\n        </div>\r\n            \r\n    )\r\n}; \r\n\r\nexport default Header;","D:\\pecquora-master\\client\\src\\components\\QuestionList.jsx",["137","138"],"import React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\nimport \"../StyleSheet/QuestionBox.css\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QuestionList = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n  \r\n  useEffect(() => {\r\n\r\n    axios\r\n      .get(\"/api/all-questions\", { withCredentials:true })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setQuestions(response.data);\r\n      });\r\n    \r\n  }, []);\r\n  \r\n  const Like = (ID) => {\r\n    const url = \"/api/likes\";\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(url, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n    <div className=\"QuestionList\">\r\n    <div id=\"QuestionSearch\" style={{marginTop:\"20px\"}}>\r\n        <div className=\"QuestionBox_inputField\">\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Search for a question\" \r\n                className=\"QuestionBox_inputfield\"\r\n                id=\"searchBar\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                value={search}\r\n                />\r\n            </div>\r\n        </div>\r\n      {questions && (\r\n        <div className=\"Questions\">\r\n          {questions.filter((val) =>{\r\n              if(search == \"\") {\r\n                  return val;\r\n              } else if (val.question.toLowerCase().includes(search.toLowerCase())) {\r\n                  return val;\r\n              }\r\n          }).map((question) => {\r\n            return (\r\n              <div className=\"question\" key={question._id}>\r\n                <div className=\"question__profile\">\r\n                  <Avatar src={question.owner_image} alt=\"User Profile\" />\r\n                  <h4>{question.owner}</h4>\r\n                </div>\r\n                <div className=\"question__info\">\r\n                  <div className=\"question__question\">\r\n                    <h4>{question.question}</h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"question__stats\">\r\n                    <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                      <ThumbUpIcon onClick={() => Like(question._id)} />\r\n                      <h4>{question.upvotes}</h4>\r\n                    </div>\r\n                    <Link className=\"comments\" style ={{textDecoration: \"none\", color: \"white\"}} to= {`/questions/${question._id}`} /*onClick={()=> QuestionID(question._id)}*/ \r\n                    > {/* to redirect user to /answer page */}\r\n                    <div className=\"comments\" style={{ cursor: \"pointer\", textDecoration: \"none\" }}>\r\n                      <ChatIcon />\r\n                    </div>\r\n                    </Link>\r\n                  </div>\r\n              </div>\r\n            );\r\n          }).reverse()}\r\n        </div>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;","D:\\pecquora-master\\client\\src\\components\\SignIn.jsx",["139","140"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"../helper/axioshelper\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        PECQuora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const SignUpUser = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n      \r\n      try {\r\n        const response = await axios.post(\"/signin\", form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n        const { data, status } = response;\r\n         \r\n        if (status === 200) {\r\n          history.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Dont have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora-master\\client\\src\\components\\QuestionBox.jsx",[],"D:\\pecquora-master\\client\\src\\components\\QuestionScreen.jsx",[],"D:\\pecquora-master\\client\\src\\helper\\axioshelper.js",[],"D:\\pecquora-master\\client\\src\\components\\AnswerBox.jsx",[],"D:\\pecquora-master\\client\\src\\components\\QuestionById.jsx",["141"],"\r\n//========= to get data (get request) from backend and display over here ==========\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\n\r\nconst QuestionById = (props) => {\r\n  const [question, setQuestion] = useState('');\r\n  \r\n  const questionID = props.questionID; // question id from url\r\n\r\n  useEffect(() => {\r\n\r\n    axios\r\n    .get(`/questions/${questionID}/`, { withCredentials:true })\r\n    .then((response) => {\r\n      setQuestion(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    }); \r\n  },[question]);\r\n  \r\n  \r\n  const Like = (ID) => {\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(\"/api/all-question/likes\", data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /* flow \r\n     1. get the id of element by \"_id\".\r\n     2. when clicked on comments send the id as argument.\r\n     3. post the id over to backend. \r\n     4. check if id is present in question db or send the id back\r\n     5. make get request and display the id!\r\n    */\r\n\r\n  return (\r\n    \r\n    <div className=\"QuestionList\" style={{marginTop:\"-5rem\"}}>\r\n      {question && (\r\n        <div className=\"Questions\">\r\n        <div className=\"question\" key={question._id}>\r\n        <div className=\"question__profile\">\r\n          <Avatar src={question.owner_image} alt=\"User Profile\" />\r\n          <h4>{question.owner}</h4> \r\n        </div>\r\n        <div className=\"question__info\">\r\n          <div className=\"question__question\">\r\n            <h4>{question.question}</h4>\r\n          </div>\r\n          <div className=\"question__stats\">\r\n            <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n              <ThumbUpIcon onClick={() => Like(question._id)} />\r\n              <h4>{question.upvotes}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      )}\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default QuestionById;","D:\\pecquora-master\\client\\src\\components\\AnswerLIst.jsx",["142","143","144"],"\r\n//========= to get data (get request) from backend and display over here ==========\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport axios from \"../helper/axioshelper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\n\r\n\r\n\r\nconst QuestionList = (props) => {\r\n  const [answers, setAnswer] = useState([]);\r\n\r\n  const questionID = props.questionID; // question id from url\r\n  const profileImage = props.profileImage;\r\n  const authStatus = props.authStatus;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/all-answer/${questionID}/`, { withCredentials:true })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setAnswer(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      }); \r\n\r\n  },[]);\r\n  \r\n  \r\n  const Like = (ID) => {\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(`/api/answers/likes/${questionID}/`, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /* flow \r\n     1. get the id of element by \"_id\".\r\n     2. when clicked on comments send the id as argument.\r\n     3. post the id over to backend. \r\n     4. check if id is present in answers db or send the id back\r\n     5. make get request and display the id!\r\n    */\r\n\r\n     return (\r\n        <div className=\"QuestionList\">\r\n          { answers && (\r\n            <div className=\"Questions\">\r\n            { answers.map((answer) => {\r\n                return (\r\n                <div className=\"question\" key={answer._id}>\r\n                    <div className=\"question__profile\">\r\n                      <Avatar src={answer.owner_image} alt=\"User Profile\" />\r\n                      <h4>{answer.owner}</h4>\r\n                    </div>\r\n                     <div className=\"question__info\">\r\n                      <div className=\"question__question\">\r\n                            <h4 >{answer.text}</h4>       \r\n                      </div>\r\n                      <div className=\"question__stats\">\r\n                        <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                          <ThumbUpIcon onClick={() => Like(answer._id)} />\r\n                          <h4>{answer.upvotes}</h4>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  );\r\n                }).reverse()}\r\n            </div>\r\n            )\r\n            }\r\n        </div>\r\n      );\r\n    };\r\n\r\n\r\nexport default QuestionList;\r\n\r\n\r\n\r\n\r\n/* <div className=\"QuestionList\">\r\n          { answers ? (\r\n            <div className=\"Questions\">\r\n            { answers.map((answer) => {\r\n                return (\r\n                <div className=\"question\" key={answer._id}>\r\n                    <div className=\"question__profile\">\r\n                      <Avatar src={answer.owner_image} alt=\"User Profile\" />\r\n                      <h4>{answer.owner}</h4>\r\n                    </div>\r\n                     <div className=\"question__info\">\r\n                      <div className=\"question__question\">\r\n                            <h4 >{answer.text}</h4>       \r\n                      </div>\r\n                      <div className=\"question__stats\">\r\n                        <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                          <ThumbUpIcon onClick={() => Like(answer._id)} />\r\n                          <h4>{answer.upvotes}</h4>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          ) : <div className=\"question\" style={{marginTop:\"50px\", padding:\"30px 2px\"}}>\r\n          <div className=\"question__question\">\r\n            <h4 >No answers for this question as of now, Go ahead and give yours answer!</h4>       \r\n            </div>\r\n            </div> \r\n            }\r\n        </div>\r\n\r\n        */","D:\\pecquora-master\\client\\src\\components\\about.jsx",["145","146","147"],{"ruleId":"148","severity":1,"message":"149","line":29,"column":11,"nodeType":"150","messageId":"151","endLine":29,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":20,"column":15,"nodeType":"150","messageId":"151","endLine":20,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":17,"column":16,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":37,"column":11,"nodeType":"150","messageId":"151","endLine":37,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":47,"column":5,"nodeType":"154","endLine":47,"endColumn":15,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"149","line":54,"column":11,"nodeType":"150","messageId":"151","endLine":54,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":36,"column":11,"nodeType":"150","messageId":"151","endLine":36,"endColumn":14},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"148","severity":1,"message":"160","line":53,"column":19,"nodeType":"150","messageId":"151","endLine":53,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":66,"column":13,"nodeType":"150","messageId":"151","endLine":66,"endColumn":16},{"ruleId":"148","severity":1,"message":"161","line":74,"column":17,"nodeType":"150","messageId":"151","endLine":74,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":75,"column":13,"nodeType":"150","messageId":"151","endLine":75,"endColumn":16},{"ruleId":"156","replacedBy":"162"},{"ruleId":"158","replacedBy":"163"},{"ruleId":"148","severity":1,"message":"164","line":6,"column":11,"nodeType":"150","messageId":"151","endLine":6,"endColumn":19},{"ruleId":"148","severity":1,"message":"165","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":17},{"ruleId":"156","replacedBy":"166"},{"ruleId":"158","replacedBy":"167"},{"ruleId":"148","severity":1,"message":"164","line":6,"column":11,"nodeType":"150","messageId":"151","endLine":6,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":59,"column":35,"nodeType":"170","messageId":"171","endLine":59,"endColumn":37},{"ruleId":"172","severity":1,"message":"173","line":60,"column":25,"nodeType":"174","messageId":"175","endLine":60,"endColumn":27},{"ruleId":"148","severity":1,"message":"160","line":53,"column":19,"nodeType":"150","messageId":"151","endLine":53,"endColumn":27},{"ruleId":"148","severity":1,"message":"161","line":69,"column":17,"nodeType":"150","messageId":"151","endLine":69,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":25,"column":5,"nodeType":"154","endLine":25,"endColumn":15,"suggestions":"176"},{"ruleId":"148","severity":1,"message":"177","line":16,"column":9,"nodeType":"150","messageId":"151","endLine":16,"endColumn":21},{"ruleId":"148","severity":1,"message":"178","line":17,"column":9,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":30,"column":5,"nodeType":"154","endLine":30,"endColumn":7,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":66,"column":25,"nodeType":"182","messageId":"183","endLine":66,"endColumn":139,"fix":"184"},{"ruleId":"180","severity":1,"message":"181","line":143,"column":25,"nodeType":"182","messageId":"183","endLine":143,"endColumn":131,"fix":"185"},{"ruleId":"180","severity":1,"message":"181","line":146,"column":25,"nodeType":"182","messageId":"183","endLine":146,"endColumn":142,"fix":"186"},"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questionID'. Either include it or remove the dependency array.","ArrayExpression",["187"],"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"'setImage' is assigned a value but never used.","'data' is assigned a value but never used.",["188"],["189"],"'location' is assigned a value but never used.","'CloseIcon' is defined but never used.",["188"],["189"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["190"],"'profileImage' is assigned a value but never used.","'authStatus' is assigned a value but never used.",["191"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"192","text":"193"},{"range":"194","text":"193"},{"range":"195","text":"193"},{"desc":"196","fix":"197"},"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"198"},{"desc":"199","fix":"200"},[3225,3225]," rel=\"noreferrer\"",[6225,6225],[6464,6464],"Update the dependencies array to be: [question, questionID]",{"range":"201","text":"202"},{"range":"203","text":"202"},"Update the dependencies array to be: [questionID]",{"range":"204","text":"205"},[1382,1392],"[question, questionID]",[724,734],[861,863],"[questionID]"]