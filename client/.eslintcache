[{"D:\\pecquora\\pecquora\\client\\src\\App.js":"1","D:\\pecquora\\pecquora\\client\\src\\index.js":"2","D:\\pecquora\\pecquora\\client\\src\\components\\header.jsx":"3","D:\\pecquora\\pecquora\\client\\src\\components\\Header.jsx":"4","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx":"5","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx":"6","D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx":"7","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx":"8","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx":"9","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerLIst.jsx":"10","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx":"11"},{"size":1944,"mtime":1616344335973,"results":"12","hashOfConfig":"13"},{"size":155,"mtime":1609670767027,"results":"14","hashOfConfig":"13"},{"size":485,"mtime":1609674323807,"results":"15","hashOfConfig":"13"},{"size":2176,"mtime":1616348704086,"results":"16","hashOfConfig":"13"},{"size":1720,"mtime":1616344382987,"results":"17","hashOfConfig":"13"},{"size":5103,"mtime":1616352536047,"results":"18","hashOfConfig":"13"},{"size":3973,"mtime":1614190912454,"results":"19","hashOfConfig":"13"},{"size":3179,"mtime":1615415932821,"results":"20","hashOfConfig":"13"},{"size":1787,"mtime":1614916020278,"results":"21","hashOfConfig":"13"},{"size":3209,"mtime":1615416978300,"results":"22","hashOfConfig":"13"},{"size":2925,"mtime":1616353474699,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fbxqte",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\pecquora\\pecquora\\client\\src\\App.js",[],"D:\\pecquora\\pecquora\\client\\src\\index.js",[],["50","51"],"D:\\pecquora\\pecquora\\client\\src\\components\\header.jsx",["52","53","54","55","56","57"],"D:\\pecquora\\pecquora\\client\\src\\components\\Header.jsx",["58","59"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx",["60","61"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PECQuora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory();\r\n    const SignUpUser = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n  \r\n      const url = \"http://localhost:5000/signin\";\r\n  \r\n      try {\r\n        const response = await axios.post(url, form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n        const { data, status } = response;\r\n  \r\n        if (status === 200) {\r\n          history.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Dont have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx",["62","63"],"D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx",[],["64","65"],"D:\\pecquora\\pecquora\\client\\src\\components\\AnswerLIst.jsx",["66","67","68","69"],"\r\n//========= to get data (get request) from backend and display over here ==========\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport axios from \"axios\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\nimport Pusher from \"pusher-js\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst QuestionList = () => {\r\n  const [answers, setAnswer] = useState([]);\r\n  const [question, setQuestion] = useState([])\r\n\r\n    /*\r\n    useEffect(() => {\r\n      const pusher = new Pusher('5bb1120da3668b56421f', {\r\n          cluster: 'mt1'\r\n      });\r\n  \r\n      const channel = pusher.subscribe('answers');\r\n      channel.bind('insertion', (data)=> {\r\n        alert(JSON.stringify(data));\r\n      });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [answers]);\r\n    */\r\n\r\n  useEffect(() => {\r\n    const url = \"http://localhost:5000/all-answer\";\r\n    axios\r\n      .get(url, { withCredentials:true })\r\n      .then((response) => {\r\n        setAnswer(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      }); \r\n\r\n  },[]);\r\n  \r\n  \r\n  const Like = (ID) => {\r\n    const url = \"http://localhost:5000/all-answer/likes\";\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(url, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /* flow \r\n     1. get the id of element by \"_id\".\r\n     2. when clicked on comments send the id as argument.\r\n     3. post the id over to backend. \r\n     4. check if id is present in answers db or send the id back\r\n     5. make get request and display the id!\r\n    */\r\n\r\n  return (\r\n    <div className=\"QuestionList\">\r\n      {answers && (\r\n        <div className=\"Questions\">\r\n          {answers.map((answer) => {\r\n            return (\r\n              <div className=\"question\" key={answer._id}>\r\n                <div className=\"question__profile\">\r\n                  <Avatar src={answer.owner_image} alt=\"User Profile\" />\r\n                  <h4>{answer.owner}</h4>\r\n                </div>\r\n                <div className=\"question__info\">\r\n                  <div className=\"question__question\">\r\n                    <h4>{answer.answer}</h4>\r\n                  </div>\r\n                  <div className=\"question__stats\">\r\n                    <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                      <ThumbUpIcon onClick={() => Like(answer._id)} />\r\n                      <h4>{answer.upvotes}</h4>\r\n                    </div>\r\n                    <Link to=\"/answer/:id\"> {/* to redirect user to /answer page */}\r\n                    <div className=\"comments\" style={{ cursor: \"pointer\" }}>\r\n                      <ChatIcon />\r\n                    </div> \r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx",["70","71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":25},{"ruleId":"78","severity":1,"message":"83","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":21},{"ruleId":"78","severity":1,"message":"84","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":20},{"ruleId":"78","severity":1,"message":"85","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":26},{"ruleId":"78","severity":1,"message":"86","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":20},{"ruleId":"78","severity":1,"message":"86","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":20},{"ruleId":"78","severity":1,"message":"87","line":10,"column":10,"nodeType":"80","messageId":"81","endLine":10,"endColumn":14},{"ruleId":"78","severity":1,"message":"88","line":53,"column":19,"nodeType":"80","messageId":"81","endLine":53,"endColumn":27},{"ruleId":"78","severity":1,"message":"89","line":70,"column":17,"nodeType":"80","messageId":"81","endLine":70,"endColumn":21},{"ruleId":"78","severity":1,"message":"90","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":8,"column":16,"nodeType":"80","messageId":"81","endLine":8,"endColumn":26},{"ruleId":"74","replacedBy":"92"},{"ruleId":"76","replacedBy":"93"},{"ruleId":"78","severity":1,"message":"90","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":11,"column":16,"nodeType":"80","messageId":"81","endLine":11,"endColumn":26},{"ruleId":"78","severity":1,"message":"94","line":15,"column":10,"nodeType":"80","messageId":"81","endLine":15,"endColumn":18},{"ruleId":"78","severity":1,"message":"95","line":15,"column":20,"nodeType":"80","messageId":"81","endLine":15,"endColumn":31},{"ruleId":"78","severity":1,"message":"96","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":16},{"ruleId":"78","severity":1,"message":"90","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":14},{"ruleId":"78","severity":1,"message":"87","line":11,"column":10,"nodeType":"80","messageId":"81","endLine":11,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":11,"column":16,"nodeType":"80","messageId":"81","endLine":11,"endColumn":26},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'HomeIcon' is defined but never used.","Identifier","unusedVar","'NotificationsIcon' is defined but never used.","'PeopleAltIcon' is defined but never used.","'GroupAddIcon' is defined but never used.","'QuestionAnswerIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'Link' is defined but never used.","'setImage' is assigned a value but never used.","'data' is assigned a value but never used.","'Pusher' is defined but never used.","'useHistory' is defined but never used.",["97"],["98"],"'question' is assigned a value but never used.","'setQuestion' is assigned a value but never used.","'ChatIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]