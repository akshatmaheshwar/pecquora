[{"D:\\pecquora\\pecquora\\client\\src\\components\\Header.jsx":"1","D:\\pecquora\\pecquora\\client\\src\\App.js":"2","D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx":"3","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx":"4","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx":"5","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx":"6","D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx":"7","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx":"8","D:\\pecquora\\pecquora\\client\\src\\index.js":"9","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionScreen.jsx":"10","D:\\pecquora\\pecquora\\client\\src\\components\\Background.jsx":"11","D:\\pecquora\\pecquora\\client\\src\\components\\Navbar.jsx":"12"},{"size":1886,"mtime":1617637809473,"results":"13","hashOfConfig":"14"},{"size":2287,"mtime":1618178486677,"results":"15","hashOfConfig":"14"},{"size":2004,"mtime":1618183580550,"results":"16","hashOfConfig":"14"},{"size":1948,"mtime":1617880651040,"results":"17","hashOfConfig":"14"},{"size":4087,"mtime":1617880576164,"results":"18","hashOfConfig":"14"},{"size":3396,"mtime":1618182258633,"results":"19","hashOfConfig":"14"},{"size":4107,"mtime":1617880663668,"results":"20","hashOfConfig":"14"},{"size":5233,"mtime":1617880669618,"results":"21","hashOfConfig":"14"},{"size":155,"mtime":1609670767027,"results":"22","hashOfConfig":"14"},{"size":696,"mtime":1618183538699,"results":"23","hashOfConfig":"14"},{"size":261,"mtime":1618105196606,"results":"24","hashOfConfig":"14"},{"size":2214,"mtime":1618178015479,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fbxqte",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\pecquora\\pecquora\\client\\src\\components\\Header.jsx",[],["58","59"],"D:\\pecquora\\pecquora\\client\\src\\App.js",["60"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport QuestionBox from \"./components/QuestionBox\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport NavBar from \"./components/Navbar\"\nimport QuesstionList from \"./components/QuestionList\";\nimport axios from \"axios\"\nimport QuestionScreen from \"./components/QuestionScreen\";\nimport Background from \"./components/Background\";\n\n// use callbacks instead of \"function App()\"\n\nconst App = () =>  {\n  \n  // prop drilling\n\n  const [authStatus, setAuthStatus] = useState(false);\n  const [profileImage, setProfileImage] = useState(null);\n\n  // whenever anything happens in the \"App\", useEffect is triggered.\n\n  useEffect(()=>{\n    const server1 = process.env.NODE_ENV === \"production\"\n        ? \"https://pecquora-backend.herokuapp.com/isLoggedIn\" : \"http://localhost:5000/isLoggedIn\";\n\n    const url= server1;\n\n    axios\n        .get(url, {withCredentials: true})\n        .then((response)=>{\n            setAuthStatus(response.data.authStatus);\n            setProfileImage(response.data.profileImage);\n        })\n        .catch((error)=>{\n            console.log(error);\n        });\n  }, []);\n\n  return (\n    <Router className=\"App\">\n      <NavBar profileImage={profileImage}/> {/* header will be present in all pages */}\n         <Switch>\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n\n          <Route path=\"/questions/:id\" render={(props) => (  \n            <QuestionScreen authStatus={authStatus} profileImage={profileImage}\n                {...props} />\n            )} exact />\n        \n          {/*<Route path=\"/questions/:id\">\n            <QuestionScreen authStatus={authStatus} profileImage={profileImage}/>\n            /Route> */}\n          <Route path=\"/\">\n            <div style={{background:\"rgba(25, 28, 31)\"}}>\n            <Background />\n            <QuestionBox authStatus={authStatus} profileImage={profileImage}/>\n            <QuesstionList />\n            </div>\n          </Route>\n\n          </Switch>\n    </Router>\n  );\n} \n\nexport default App;\n",["61","62"],"D:\\pecquora\\pecquora\\client\\src\\components\\AnswerBox.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionBox.jsx",[],["63","64"],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionById.jsx",["65"],"\r\n//========= to get data (get request) from backend and display over here ==========\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport axios from \"axios\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"../StyleSheet/QuestionList.css\";\r\n\r\nconst QuestionById = (props) => {\r\n  const [question, setQuestion] = useState('');\r\n  \r\n  const questionID = props.questionID; // question id from url\r\n  const profileImage = props.profileImage;\r\n    /*\r\n    useEffect(() => {\r\n      const pusher = new Pusher('5bb1120da3668b56421f', {\r\n          cluster: 'mt1'\r\n      });\r\n  \r\n      const channel = pusher.subscribe('question');\r\n      channel.bind('insertion', (data)=> {\r\n        alert(JSON.stringify(data));\r\n      });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [question]);\r\n    */\r\n\r\n  useEffect(() => {\r\n    const server1 = process.env.NODE_ENV === \"production\"\r\n         ? `https://pecquora-backend.herokuapp.com/questions/${questionID}` : `http://localhost:5000/questions/${questionID}`;\r\n    \r\n    const url = server1;\r\n\r\n    axios\r\n    .get(url, { withCredentials:true })\r\n    .then((response) => {\r\n      setQuestion(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    }); \r\n  },[question]);\r\n  \r\n  \r\n  const Like = (ID) => {\r\n    const server1 = process.env.NODE_ENV === \"production\"\r\n         ? \"https://pecquora-backend.herokuapp.com/api/all-question/likes\" : \"http://localhost:5000/api/all-question/likes\";\r\n    \r\n    const url = server1;\r\n\r\n    const data = new FormData();\r\n    data.append(\"id\", ID);\r\n\r\n    axios\r\n      .post(url, data, { withCredentials: true })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /* flow \r\n     1. get the id of element by \"_id\".\r\n     2. when clicked on comments send the id as argument.\r\n     3. post the id over to backend. \r\n     4. check if id is present in question db or send the id back\r\n     5. make get request and display the id!\r\n    */\r\n\r\n  return (\r\n    \r\n    <div className=\"QuestionList\">\r\n      {question && (\r\n        <div className=\"Questions\">\r\n        <div className=\"question\" key={question._id}>\r\n        <div className=\"question__profile\">\r\n          <Avatar src={profileImage} alt=\"User Profile\" />\r\n          <h4>{question.owner}</h4>\r\n        </div>\r\n        <div className=\"question__info\">\r\n          <div className=\"question__question\">\r\n            <h4>{question.question}</h4>\r\n          </div>\r\n          <div className=\"question__stats\">\r\n            <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n              <ThumbUpIcon onClick={() => Like(question._id)} />\r\n              <h4>{question.upvotes}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      )}\r\n    </div> \r\n    \r\n\r\n    /* ================================================== \r\n    <div className=\"QuestionList\">\r\n      {question && (\r\n        <div className=\"Questions\">\r\n          {question.map((question) => {\r\n            return (\r\n              <div className=\"question\" key={question._id}>\r\n                <div className=\"question__profile\">\r\n                  <Avatar src={question.owner_image} alt=\"User Profile\" />\r\n                  <h4>{question.owner}</h4>\r\n                </div>\r\n                <div className=\"question__info\">\r\n                  <div className=\"question__question\">\r\n                    <h4>{question.question}</h4>\r\n                  </div>\r\n                  <div className=\"question__stats\">\r\n                    <div className=\"likes\" style={{ cursor: \"pointer\" }}>\r\n                      <ThumbUpIcon onClick={() => Like(question._id)} />\r\n                      <h4>{question.upvotes}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div> */\r\n  );\r\n};\r\n\r\nexport default QuestionById;","D:\\pecquora\\pecquora\\client\\src\\components\\QuestionList.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\SignIn.jsx",["66","67"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        PECQuora\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const history = useHistory();\r\n    const SignUpUser = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      const form_data = new FormData();\r\n      form_data.append(\"username\", username);\r\n      form_data.append(\"password\", password);\r\n      form_data.append(\"image\", image);\r\n\r\n      const server1 = process.env.NODE_ENV === \"production\"\r\n      ? \"https://pecquora-backend.herokuapp.com/signin\" : \"http://localhost:5000/signin\";\r\n \r\n      const url = server1;\r\n  \r\n  \r\n      try {\r\n        const response = await axios.post(url, form_data, {\r\n          withCredentials: true,\r\n        });\r\n        console.log(response);\r\n        const { data, status } = response;\r\n  \r\n        if (status === 200) {\r\n          history.push(\"/\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.response.data.msg);\r\n      }\r\n    };\r\n    \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={SignUpUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Dont have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\pecquora\\pecquora\\client\\src\\components\\SignUp.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\index.js",[],"D:\\pecquora\\pecquora\\client\\src\\components\\QuestionScreen.jsx",[],"D:\\pecquora\\pecquora\\client\\src\\components\\Background.jsx",["68"],"import React from \"react\";\r\n\r\n  const Header = () => {\r\n    \r\n    // to get window location!\r\n    const location = window.location.href;\r\n\r\n    return(\r\n        <div style={{padding:\"4rem\"}}>\r\n\r\n        </div>\r\n            \r\n    )\r\n}; \r\n\r\nexport default Header;",["69","70"],"D:\\pecquora\\pecquora\\client\\src\\components\\Navbar.jsx",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":47,"column":5,"nodeType":"86","endLine":47,"endColumn":15,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"88","line":53,"column":19,"nodeType":"78","messageId":"79","endLine":53,"endColumn":27},{"ruleId":"76","severity":1,"message":"89","line":74,"column":17,"nodeType":"78","messageId":"79","endLine":74,"endColumn":21},{"ruleId":"76","severity":1,"message":"90","line":6,"column":11,"nodeType":"78","messageId":"79","endLine":6,"endColumn":19},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","replacedBy":"92"},{"ruleId":"76","severity":1,"message":"93","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":17},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar",["94"],["95"],["94"],["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questionID'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'setImage' is assigned a value but never used.","'data' is assigned a value but never used.","'location' is assigned a value but never used.",["94"],["95"],"'CloseIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [question, questionID]",{"range":"99","text":"100"},[1340,1350],"[question, questionID]"]